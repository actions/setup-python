name: Validate Python e2e
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: 30 3 * * *
  workflow_dispatch:

jobs:
  setup-versions-from-manifest:
    name: Setup ${{ matrix.python }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-22.04]
        python: [3.11]
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: setup-python ${{ matrix.python }}
      id: setup-python
      uses: ./
      with:
        python-version: ${{ matrix.python }}

    - name: Check python-path
      run: ./__tests__/check-python-path.sh '${{ steps.setup-python.outputs.python-path }}'
      shell: bash

    - name: Validate version
      run: |
        $pythonVersion = (python --version)
        if ("Python ${{ matrix.python }}" -ne "$pythonVersion"){
          Write-Host "The current version is $pythonVersion; expected version is ${{ matrix.python }}"
          exit 1
        }
        $pythonVersion
      shell: pwsh

    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'

  setup-versions-from-file:
    name: Setup ${{ matrix.python }} ${{ matrix.os }} version file
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-22.04]
        python: [3.11]
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: build-version-file ${{ matrix.python }}
      run: echo ${{ matrix.python }} > .python-version

    - name: setup-python ${{ matrix.python }}
      id: setup-python
      uses: ./
      with:
        python-version-file: '.python-version'

    - name: Check python-path
      run: ./__tests__/check-python-path.sh '${{ steps.setup-python.outputs.python-path }}'
      shell: bash

    - name: Validate version
      run: |
        $pythonVersion = (python --version)
        if ("Python ${{ matrix.python }}" -ne "$pythonVersion"){
          Write-Host "The current version is $pythonVersion; expected version is ${{ matrix.python }}"
          exit 1
        }
        $pythonVersion
      shell: pwsh

    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'

  setup-pre-release-version-from-manifest:
    name: Setup 3.11.0-beta.3 ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-22.04]
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: setup-python 3.11.0-beta.3
      id: setup-python
      uses: ./
      with:
        python-version: '3.11.0-beta.3'

    - name: Check python-path
      run: ./__tests__/check-python-path.sh '${{ steps.setup-python.outputs.python-path }}'
      shell: bash

    - name: Validate version
      run: |
        $pythonVersion = (python --version)
        if ("Python 3.11.0b3" -ne "$pythonVersion"){
          Write-Host "The current version is $pythonVersion; expected version is 3.11.0b3"
          exit 1
        }
        $pythonVersion
      shell: pwsh

    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'

  setup-dev-version:
    name: Setup 3.9-dev ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: setup-python 3.9-dev
      id: setup-python
      uses: ./
      with:
        python-version: '3.9-dev'

    - name: Check python-path
      run: ./__tests__/check-python-path.sh '${{ steps.setup-python.outputs.python-path }}'
      shell: bash

    - name: Validate version
      run: ${{ startsWith(steps.setup-python.outputs.python-version, '3.9.') }}
      shell: bash

    - name: Run simple code
      run: python -c 'import math; print(math.factorial(5))'
